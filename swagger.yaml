openapi: 3.0.0
info:
  title: LOCASWIPE API
  description: Projet MyDigitalProject LocaSwipe API
  version: "1.0"
servers:
  - url: http://localhost:3000/api
tags:
  - name: Users
    description: Operations related to users
  - name: Authentication
    description: Authentication related operations
  - name: Accommodations
    description: Operations about accommodations

paths:
  /users:
    get:
      tags:
        - Users
      summary: Retrieve all users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
      responses:
        "201":
          description: User created

  /users/{id}:
    get:
      tags:
        - Users
      summary: Retrieve a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      tags:
        - Users
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated
    delete:
      tags:
        - Users
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: User deleted

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT Token
        "401":
          description: Authentication failed

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUser"
      responses:
        "201":
          description: User registered

  /accommodations:
    get:
      tags:
        - Accommodations
      summary: Retrieve all accommodations
      responses:
        "200":
          description: A list of available accommodations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Accommodation"

  /accommodations/{id}/like:
    post:
      tags:
        - Accommodations
      summary: Like an accommodation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_user:
                  type: integer
                  description: ID of the user liking the accommodation
      responses:
        "201":
          description: Like added successfully
        "400":
          description: User ID is required
        "409":
          description: User has already liked this accommodation
        "500":
          description: Error while adding like

  /accommodations/{accommodationId}/likes:
    get:
      tags:
        - Accommodations
      summary: Retrieve users who liked an accommodation
      parameters:
        - name: accommodationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A list of users who liked the accommodation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Error while retrieving likes

  /accommodations/accept-tenant:
    post:
      tags:
        - Accommodations
      summary: Accept a tenant for an accommodation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ownerId:
                  type: integer
                  description: ID of the owner
                tenantId:
                  type: integer
                  description: ID of the tenant
                accommodationId:
                  type: integer
                  description: ID of the accommodation
      responses:
        "201":
          description: Tenant accepted successfully
        "403":
          description: Forbidden operation (either not the owner or tenant did not like the accommodation)
        "500":
          description: Error while accepting the tenant

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        avatar:
          type: string
    CreateUser:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        phone:
          type: string
    RegisterUser:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
        roleType:
          type: string
    Accommodation:
      type: object
      properties:
        id:
          type: integer
        address:
          type: string
        city:
          type: string
        rent:
          type: integer
        disponibility:
          type: boolean
        id_user:
          type: integer
        image:
          type: string
        surface_area:
          type: number
        description:
          type: string
        property_type:
          type: string
        likes_count:
          type: integer
